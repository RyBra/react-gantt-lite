{"version":3,"sources":["../src/GanttChart.tsx","../src/utils/cn.ts"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { cn } from './utils/cn';\nimport { GanttChartProps, GanttTask } from './types';\n\nconst DEFAULT_COLUMN_WIDTH = 64;\nconst DEFAULT_ROW_HEIGHT = 80;\n\nfunction formatHeader(\n  date: Date,\n  unit: 'day' | 'week' | 'month',\n  locale: string,\n  opts?: { weekNumbering?: 'fixed52' | 'iso'; weekHeaderMode?: 'date' | 'week' | 'date+week' }\n) {\n  if (unit === 'day') {\n    return date.toLocaleDateString(locale, { day: '2-digit', month: 'short' });\n  }\n  if (unit === 'week') {\n    const weekStart = new Date(date);\n    const dayIdx = (weekStart.getDay() + 6) % 7; // Mon=0..Sun=6\n    weekStart.setDate(weekStart.getDate() - dayIdx);\n    const d = weekStart.getDate();\n    const m = weekStart.getMonth() + 1;\n    if (opts?.weekHeaderMode === 'week' || opts?.weekHeaderMode === 'date+week') {\n      let week = getISOWeek(weekStart);\n      if ((opts?.weekNumbering ?? 'fixed52') === 'fixed52' && week === 53) week = 52;\n      if (opts?.weekHeaderMode === 'week') return `W${week}`;\n      return `${d}.${m} · W${week}`;\n    }\n    return `${d}.${m}`;\n  }\n  return date.toLocaleDateString(locale, { month: 'short', year: 'numeric' });\n}\n\nfunction getISOWeek(date: Date): number {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const dayNum = d.getUTCDay() || 7; // Mon=1..Sun=7\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  const weekNo = Math.ceil((((d.getTime() - yearStart.getTime()) / 86400000) + 1) / 7);\n  return weekNo;\n}\n\nexport const GanttChart: React.FC<GanttChartProps> = (props) => {\n  const {\n    tasks,\n    filters,\n    onFiltersChange,\n    onTaskClick,\n    className,\n    styles,\n    theme,\n    activityStatusColors,\n    renderGroupHeader,\n    renderTimeCell,\n    renderTaskBar,\n    selectedTaskId,\n    onSelectedTaskChange,\n    onTaskDoubleClick,\n    onTaskContextMenu,\n    onTaskLongPress,\n    dateFormatter,\n    viewConfig: controlledView,\n    onViewConfigChange,\n    defaultViewConfig,\n    locale = 'ru-RU',\n    showTodayLine = true,\n    weekNumbering = 'fixed52',\n    weekHeaderMode = 'date+week'\n  } = props;\n\n  const [uncontrolledView, setUncontrolledView] = useState(() => ({\n    timeScale: { unit: 'day' as const, step: 1 },\n    showWeekends: true,\n    showDependencies: false,\n    groupBy: 'group' as const,\n    ...(defaultViewConfig || {})\n  }));\n  const view = controlledView || uncontrolledView;\n\n  const setView = (updater: (prev: typeof view) => typeof view) => {\n    const next = updater(view);\n    if (controlledView && onViewConfigChange) onViewConfigChange(next);\n    else setUncontrolledView(next);\n  };\n\n  const filteredTasks = useMemo(() => {\n    let result = tasks.slice();\n    if (filters?.groups?.length) result = result.filter(t => filters.groups!.includes(t.group.id));\n    if (filters?.categories?.length) result = result.filter(t => filters.categories!.includes(t.activity.category));\n    if (filters?.status?.length) result = result.filter(t => filters.status!.includes(t.status));\n    if (filters?.dateRange) {\n      result = result.filter(t => t.startDate >= filters.dateRange!.start && t.endDate <= filters.dateRange!.end);\n    }\n    return result;\n  }, [tasks, filters]);\n\n  const groupedTasks = useMemo(() => {\n    if (view.groupBy === 'none') return { 'Все задачи': filteredTasks };\n    const groups: Record<string, GanttTask[]> = {};\n    for (const task of filteredTasks) {\n      const key = view.groupBy === 'group' ? `${task.group.name}${typeof task.group.size === 'number' ? ` (${task.group.size})` : ''}` : task.activity.category;\n      if (!groups[key]) groups[key] = [];\n      groups[key].push(task);\n    }\n    return groups;\n  }, [filteredTasks, view.groupBy]);\n\n  const timeScale = useMemo(() => {\n    if (filteredTasks.length === 0) return [] as Date[];\n    const allDates = filteredTasks.flatMap(t => [t.startDate, t.endDate]);\n    const minDate = new Date(Math.min(...allDates.map(d => d.getTime())));\n    const maxDate = new Date(Math.max(...allDates.map(d => d.getTime())));\n    const startDate = new Date(minDate);\n    const endDate = new Date(maxDate);\n    // Normalize times to midnight to avoid DST drift\n    startDate.setHours(0, 0, 0, 0);\n    endDate.setHours(0, 0, 0, 0);\n\n    // For week view, align to week boundaries (Mon-Sun)\n    if (view.timeScale.unit === 'week') {\n      const dayIdxStart = (startDate.getDay() + 6) % 7; // Mon=0 .. Sun=6\n      startDate.setDate(startDate.getDate() - dayIdxStart);\n      const dayIdxEnd = (endDate.getDay() + 6) % 7; // Mon=0 .. Sun=6\n      const addToSunday = (6 - dayIdxEnd);\n      endDate.setDate(endDate.getDate() + addToSunday);\n    }\n    const dates: Date[] = [];\n    const current = new Date(startDate);\n    while (current <= endDate) {\n      dates.push(new Date(current));\n      if (view.timeScale.unit === 'day') current.setDate(current.getDate() + view.timeScale.step);\n      else if (view.timeScale.unit === 'week') current.setTime(current.getTime() + 7 * 24 * 60 * 60 * 1000 * view.timeScale.step);\n      else current.setMonth(current.getMonth() + view.timeScale.step);\n    }\n    // Ensure at least two buckets for week/month/day so bars are visible when range < one step\n    if (dates.length < 2) {\n      const next = new Date(startDate);\n      if (view.timeScale.unit === 'day') next.setDate(next.getDate() + view.timeScale.step);\n      else if (view.timeScale.unit === 'week') next.setTime(next.getTime() + 7 * 24 * 60 * 60 * 1000 * view.timeScale.step);\n      else next.setMonth(next.getMonth() + view.timeScale.step);\n      dates.push(next);\n    }\n    return dates;\n  }, [filteredTasks, view.timeScale]);\n\n  const columnWidth = styles?.columnWidthPx ?? DEFAULT_COLUMN_WIDTH;\n  const rowHeight = styles?.rowHeightPx ?? DEFAULT_ROW_HEIGHT;\n  const minBarWidth = styles?.minTaskBarWidthPx ?? 60;\n\n  const getTaskPosition = (task: GanttTask) => {\n    if (timeScale.length === 0) return { left: 0, width: 0 };\n    const startTime = task.startDate.getTime();\n    const endTime = task.endDate.getTime();\n    const scaleStartTime = timeScale[0].getTime();\n    const scaleEndTime = timeScale[timeScale.length - 1].getTime();\n    const total = scaleEndTime - scaleStartTime;\n    if (total <= 0) return { left: 0, width: 0 };\n    const leftPercent = ((startTime - scaleStartTime) / total) * 100;\n    const widthPercent = ((endTime - startTime) / total) * 100;\n    const left = Math.min(100, Math.max(0, leftPercent));\n    const width = Math.max(1, Math.min(100 - left, widthPercent));\n    return { left, width };\n  };\n\n  const formatHeaderCell = (date: Date) => (dateFormatter ? dateFormatter(date, view.timeScale.unit) : formatHeader(date, view.timeScale.unit, locale));\n\n  return (\n    <div className={cn('fx-gantt w-full', className)}>\n      <div className=\"fx-gantt-toolbar\" style={{ marginBottom: 12, display: 'flex', gap: 8, alignItems: 'center', justifyContent: 'space-between', color: theme?.textColor }}>\n        <div style={{ fontWeight: 600 }}>Диаграмма Ганта</div>\n        <div style={{ display: 'flex', gap: 8 }}>\n          <select\n            value={view.groupBy}\n            onChange={(e) => setView(prev => ({ ...prev, groupBy: e.target.value as any }))}\n          >\n            <option value=\"group\">По группам</option>\n            <option value=\"category\">По категориям</option>\n            <option value=\"none\">Без группировки</option>\n          </select>\n          <select\n            value={view.timeScale.unit}\n            onChange={(e) => setView(prev => ({ ...prev, timeScale: { ...prev.timeScale, unit: e.target.value as any } }))}\n          >\n            <option value=\"day\">По дням</option>\n            <option value=\"week\">По неделям</option>\n            <option value=\"month\">По месяцам</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"fx-gantt-card\" style={{ border: '1px solid #e5e7eb', borderRadius: 8, overflow: 'hidden', background: theme?.cardBg ?? '#ffffff', color: theme?.textColor }}>\n        <div style={{ display: 'flex' }}>\n          <div className={cn('fx-gantt-sidebar')} style={{ width: 320, flexShrink: 0, background: theme?.sidebarBg ?? '#fafafa' }}>\n            <div style={{ height: 49, display: 'flex', alignItems: 'center', padding: '0 12px', borderBottom: '1px solid #e5e7eb', background: theme?.headerBg ?? '#fafafa', fontWeight: 500, boxSizing: 'border-box' }}>Операции</div>\n            {Object.entries(groupedTasks).map(([groupName, groupTasks]) => (\n              <div key={groupName}>\n                <div style={{ height: 40, display: 'flex', alignItems: 'center', padding: '0 10px', borderBottom: `1px solid ${theme?.gridLine ?? '#f1f5f9'}`, background: theme?.headerBg ?? (theme?.sidebarBg ?? '#fafafa'), boxSizing: 'border-box' }}>\n                  {renderGroupHeader ? renderGroupHeader(groupName, groupTasks) : (\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n                      <span style={{ fontWeight: 500 }}>{groupName}</span>\n                      <span style={{ fontSize: 12, background: theme?.gridLine ?? '#f3f4f6', borderRadius: 8, padding: '2px 6px' }}>{groupTasks.length}</span>\n                    </div>\n                  )}\n                </div>\n                {groupTasks.map(task => (\n                  <div key={task.id} style={{ height: rowHeight, display: 'flex', flexDirection: 'column', justifyContent: 'center', gap: 4, padding: '0 10px', borderBottom: '1px solid #f1f5f9', boxSizing: 'border-box' }}>\n                    <div style={{ fontSize: 14, fontWeight: 500, color: theme?.textColor ?? '#111827', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                      {task.name || 'Без названия'}\n                    </div>\n                    <div style={{ display: 'flex', gap: 8, color: theme?.textColor ?? '#6b7280', opacity: 0.75, fontSize: 12 }}>\n                      <span>{task.activity.name}</span>\n                      {typeof task.group.size === 'number' && (\n                        <>\n                          <span>•</span>\n                          <span>{task.group.size}</span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"fx-gantt-timeline\" style={{ flex: 1, overflow: 'auto' }}>\n            <div style={{ minWidth: `${timeScale.length * columnWidth}px`, position: 'relative' }}>\n              <div style={{ position: 'sticky', top: 0, zIndex: 1, background: theme?.headerBg ?? '#fff', borderBottom: '1px solid #e5e7eb', color: theme?.textColor }}>\n                <div style={{ display: 'flex', height: 48 }}>\n                  {timeScale.map((date, index) => {\n                    const isToday = date.toDateString() === new Date().toDateString();\n                    return (\n                      <div key={index} style={{ minWidth: columnWidth, width: columnWidth, borderRight: `1px solid ${theme?.gridLine ?? '#f1f5f9'}`, padding: 8, textAlign: 'center', fontSize: 12, fontWeight: 500, background: isToday ? (theme?.headerTodayBg ?? '#eff6ff') : undefined, color: isToday ? (theme?.headerTodayText ?? '#1d4ed8') : undefined, boxSizing: 'border-box' }}>\n                        {renderTimeCell ? renderTimeCell(date, index, isToday) : (\n                          <div>{dateFormatter ? dateFormatter(date, view.timeScale.unit) : formatHeader(date, view.timeScale.unit, locale, { weekNumbering, weekHeaderMode })}</div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              <div style={{ position: 'relative' }}>\n                {Object.entries(groupedTasks).map(([groupName, groupTasks]) => (\n                  <div key={groupName}>\n                    <div style={{ position: 'relative', height: 40, background: theme?.headerBg ?? (theme?.cardBg ?? '#fafafa'), borderBottom: `1px solid ${theme?.gridLine ?? '#f1f5f9'}`, boxSizing: 'border-box' }}>\n                      {timeScale.map((_, index) => (\n                        <div key={index} style={{ position: 'absolute', top: 0, bottom: 0, left: index * columnWidth, width: 0, borderRight: `1px solid ${theme?.gridLine ?? '#f1f5f9'}` }} />\n                      ))}\n                    </div>\n                    {groupTasks.map(task => {\n                      const position = getTaskPosition(task);\n                      const leftPx = (position.left / 100) * (timeScale.length * columnWidth);\n                      const widthPx = Math.max(minBarWidth, (position.width / 100) * (timeScale.length * columnWidth));\n                      const isSelected = selectedTaskId === task.id;\n                      return (\n                        <div key={task.id} style={{ position: 'relative', height: rowHeight, borderBottom: '1px solid #f1f5f9', boxSizing: 'border-box' }}>\n                          {timeScale.map((_, index) => (\n                            <div key={index} style={{ position: 'absolute', top: 0, bottom: 0, left: index * columnWidth, width: 0, borderRight: `1px solid ${theme?.gridLine ?? '#f1f5f9'}` }} />\n                          ))}\n\n                          {renderTaskBar ? (\n                            renderTaskBar({ task, leftPercent: position.left, widthPercent: position.width, isSelected })\n                          ) : (\n                            <div\n                              role=\"button\"\n                              tabIndex={0}\n                              onClick={(e) => {\n                                onTaskClick?.(task, e.nativeEvent as any);\n                                onSelectedTaskChange?.(isSelected ? null : task.id);\n                              }}\n                              onDoubleClick={(e) => onTaskDoubleClick?.(task, e as any)}\n                              onContextMenu={(e) => { e.preventDefault(); onTaskContextMenu?.(task, e as any); }}\n                              style={{\n                                position: 'absolute',\n                                top: 24,\n                                left: leftPx,\n                                width: widthPx,\n                                height: 32,\n                                background: (task.activity.status && activityStatusColors?.[task.activity.status]) ?? (theme?.taskBarBg ?? '#dbeafe'),\n                                border: `2px solid ${isSelected ? (theme?.taskBarSelectedBorder ?? '#ef4444') : (theme?.taskBarBorder ?? '#93c5fd')}`,\n                                borderRadius: 6,\n                                display: position.width > 0 ? 'flex' : 'none',\n                                alignItems: 'center',\n                                justifyContent: 'space-between',\n                                padding: '0 8px',\n                                cursor: 'pointer',\n                                boxShadow: '0 1px 2px rgba(0,0,0,0.06)'\n                              }}\n                            >\n                              <span\n                                style={{ fontSize: 12, fontWeight: 600, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}\n                                onPointerDown={(e) => {\n                                  const target = e.currentTarget as HTMLSpanElement;\n                                  const timeout = setTimeout(() => onTaskLongPress?.(task, e as any), 500);\n                                  const cancel = () => clearTimeout(timeout);\n                                  target.addEventListener('pointerup', cancel, { once: true });\n                                  target.addEventListener('pointercancel', cancel, { once: true });\n                                  target.addEventListener('pointerleave', cancel, { once: true });\n                                }}\n                              >\n                                {task.name || 'Без названия'}\n                              </span>\n                              {task.assignedResources ? <span style={{ fontSize: 10, opacity: 0.7 }}>res</span> : null}\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                ))}\n              </div>\n\n              {showTodayLine && (\n                <div style={{ position: 'absolute', top: 48, bottom: 0, pointerEvents: 'none' }}>\n                  {timeScale.map((date, index) => {\n                    const isToday = date.toDateString() === new Date().toDateString();\n                    if (!isToday) return null;\n                    return <div key=\"today-line\" style={{ position: 'absolute', top: 0, bottom: 0, left: index * columnWidth, width: 2, background: theme?.todayLine ?? '#3b82f6' }} />;\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GanttChart;\n\n","export function cn(...classes: Array<string | undefined | null | false>): string {\n  return classes.filter(Boolean).join(' ');\n}\n\n"],"mappings":"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","names":[]}